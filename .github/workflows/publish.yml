name: Publish Wheels

on:
  push:
    branches:
      - release-please--branches--main
  release:
    types: [published]

jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.botGitHubToken }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: Gr1N/setup-poetry@v8

      - name: Check dependencies
        run: make doctor

      - uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Get rc version
        if: github.ref == 'refs/heads/release-please--branches--main'
        id: get-rc-version
        continue-on-error: true
        run: |
          rc_version=$(curl -s https://pypi.org/pypi/instill-sdk/json | jq '.releases | keys' | sort -V | tr -d '[]"", ' | sed '/^$/d' | tail -1 | grep -Eo 'rc[0-9]' | grep -Eo '[0-9]+$')
          echo "rc_version=$rc_version" >> $GITHUB_OUTPUT

      - name: Tag rc version
        if: github.ref == 'refs/heads/release-please--branches--main'
        run: |
          if [ ${{ steps.get-rc-version.outcome }} == 'failure' ]; then
            rc_version=0
          else
            rc_version=${{ steps.get-rc-version.outputs.rc_version }}
            rc_version=$((rc_version+1))
          fi
          poetry version "$(poetry version -s)rc$(echo $rc_version)"

      - name: Clean and Build
        run: |
          make clean
          make dist

      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPITOKEN }}
        run: |
          poetry publish
