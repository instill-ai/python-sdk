# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vdp.pipeline.v1alpha import operator_definition_pb2 as vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2
from vdp.pipeline.v1alpha import pipeline_pb2 as vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2


class PipelinePublicServiceStub(object):
    """Pipeline service responds to external access
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Liveness = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/Liveness',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.FromString,
                )
        self.Readiness = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/Readiness',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.FromString,
                )
        self.ListOperatorDefinitions = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ListOperatorDefinitions',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.FromString,
                )
        self.GetOperatorDefinition = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperatorDefinition',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionResponse.FromString,
                )
        self.ListPipelines = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ListPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.FromString,
                )
        self.LookUpPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/LookUpPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
                )
        self.CreateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/CreateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
                )
        self.ListUserPipelines = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ListUserPipelines',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
                )
        self.GetUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
                )
        self.UpdateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/UpdateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
                )
        self.DeleteUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/DeleteUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
                )
        self.ValidateUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ValidateUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
                )
        self.RenameUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/RenameUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
                )
        self.TriggerUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
                )
        self.TriggerAsyncUserPipeline = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncUserPipeline',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
                )
        self.GetOperation = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperation',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.FromString,
                )
        self.CreateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/CreateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
                )
        self.ListUserPipelineReleases = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/ListUserPipelineReleases',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
                )
        self.GetUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/GetUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
                )
        self.UpdateUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/UpdateUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
                )
        self.DeleteUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/DeleteUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
                )
        self.RestoreUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/RestoreUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
                )
        self.SetDefaultUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/SetDefaultUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseResponse.FromString,
                )
        self.WatchUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/WatchUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.FromString,
                )
        self.RenameUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/RenameUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
                )
        self.TriggerUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
                )
        self.TriggerAsyncUserPipelineRelease = channel.unary_unary(
                '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncUserPipelineRelease',
                request_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
                response_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
                )


class PipelinePublicServiceServicer(object):
    """Pipeline service responds to external access
    """

    def Liveness(self, request, context):
        """Liveness method receives a LivenessRequest message and returns a
        LivenessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Readiness(self, request, context):
        """Readiness method receives a ReadinessRequest message and returns a
        ReadinessResponse message.
        See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOperatorDefinitions(self, request, context):
        """ListOperatorDefinitions method receives a
        ListOperatorDefinitionsRequest message and returns a
        ListOperatorDefinitionsResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperatorDefinition(self, request, context):
        """GetOperatorDefinition method receives a
        GetOperatorDefinitionRequest message and returns a
        GetGetOperatorDefinitionResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPipelines(self, request, context):
        """ListPipelines method receives a ListPipelinesRequest message and returns a
        ListPipelinesResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookUpPipeline(self, request, context):
        """LookUpPipeline method receives a LookUpPipelineRequest message and returns
        a LookUpPipelineResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipeline(self, request, context):
        """CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
        a CreateUserPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelines(self, request, context):
        """ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
        ListUserPipelinesResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipeline(self, request, context):
        """GetUserPipeline method receives a GetUserPipelineRequest message and returns a
        GetUserPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipeline(self, request, context):
        """UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
        a UpdateUserPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipeline(self, request, context):
        """DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
        a DeleteUserPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateUserPipeline(self, request, context):
        """Validate a pipeline.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipeline(self, request, context):
        """RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
        a RenameUserPipelineResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipeline(self, request, context):
        """TriggerUserPipeline method receives a TriggerUserPipelineRequest message
        and returns a TriggerUserPipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipeline(self, request, context):
        """TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
        returns a TriggerAsyncUserPipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
        """*Longrunning operation methods

        GetOperation method receives a
        GetOperationRequest message and returns a
        GetOperationResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserPipelineRelease(self, request, context):
        """CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
        a CreateUserPipelineReleaseResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPipelineReleases(self, request, context):
        """ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
        ListUserPipelineReleasesResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPipelineRelease(self, request, context):
        """GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
        GetUserPipelineReleaseResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPipelineRelease(self, request, context):
        """UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
        a UpdateUserPipelineReleaseResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserPipelineRelease(self, request, context):
        """DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
        a DeleteUserPipelineReleaseResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreUserPipelineRelease(self, request, context):
        """RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
        and returns a RestoreUserPipelineReleaseResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultUserPipelineRelease(self, request, context):
        """SetDefaultUserPipelineRelease method receives a SetDefaultUserPipelineReleaseRequest message
        and returns a SetDefaultUserPipelineReleaseResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchUserPipelineRelease(self, request, context):
        """WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
        and returns a WatchUserPipelineReleaseResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameUserPipelineRelease(self, request, context):
        """RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
        a RenameUserPipelineReleaseResponse message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerUserPipelineRelease(self, request, context):
        """TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
        and returns a TriggerPipelineReleasePipelineResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerAsyncUserPipelineRelease(self, request, context):
        """TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
        returns a TriggerAsyncUserPipelineReleaseResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelinePublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Liveness': grpc.unary_unary_rpc_method_handler(
                    servicer.Liveness,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.SerializeToString,
            ),
            'Readiness': grpc.unary_unary_rpc_method_handler(
                    servicer.Readiness,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.SerializeToString,
            ),
            'ListOperatorDefinitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOperatorDefinitions,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.SerializeToString,
            ),
            'GetOperatorDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperatorDefinition,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionResponse.SerializeToString,
            ),
            'ListPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.SerializeToString,
            ),
            'LookUpPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.LookUpPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.SerializeToString,
            ),
            'CreateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineResponse.SerializeToString,
            ),
            'ListUserPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelines,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesResponse.SerializeToString,
            ),
            'GetUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineResponse.SerializeToString,
            ),
            'UpdateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineResponse.SerializeToString,
            ),
            'DeleteUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineResponse.SerializeToString,
            ),
            'ValidateUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineResponse.SerializeToString,
            ),
            'RenameUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineResponse.SerializeToString,
            ),
            'TriggerUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipeline,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.SerializeToString,
            ),
            'GetOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperation,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.SerializeToString,
            ),
            'CreateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.SerializeToString,
            ),
            'ListUserPipelineReleases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPipelineReleases,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesResponse.SerializeToString,
            ),
            'GetUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseResponse.SerializeToString,
            ),
            'UpdateUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.SerializeToString,
            ),
            'DeleteUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.SerializeToString,
            ),
            'RestoreUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.SerializeToString,
            ),
            'SetDefaultUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseResponse.SerializeToString,
            ),
            'WatchUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.SerializeToString,
            ),
            'RenameUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.SerializeToString,
            ),
            'TriggerAsyncUserPipelineRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerAsyncUserPipelineRelease,
                    request_deserializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.FromString,
                    response_serializer=vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vdp.pipeline.v1alpha.PipelinePublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelinePublicService(object):
    """Pipeline service responds to external access
    """

    @staticmethod
    def Liveness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/Liveness',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LivenessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Readiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/Readiness',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ReadinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOperatorDefinitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ListOperatorDefinitions',
            vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.ListOperatorDefinitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperatorDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperatorDefinition',
            vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_operator__definition__pb2.GetOperatorDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ListPipelines',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookUpPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/LookUpPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.LookUpPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/CreateUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ListUserPipelines',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/UpdateUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/DeleteUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ValidateUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ValidateUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/RenameUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncUserPipeline',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetOperation',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/CreateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.CreateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserPipelineReleases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/ListUserPipelineReleases',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.ListUserPipelineReleasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/GetUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.GetUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/UpdateUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.UpdateUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/DeleteUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.DeleteUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/RestoreUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RestoreUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/SetDefaultUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.SetDefaultUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/WatchUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.WatchUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/RenameUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.RenameUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerAsyncUserPipelineRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vdp.pipeline.v1alpha.PipelinePublicService/TriggerAsyncUserPipelineRelease',
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseRequest.SerializeToString,
            vdp_dot_pipeline_dot_v1alpha_dot_pipeline__pb2.TriggerAsyncUserPipelineReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
