"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
import model.model.v1alpha.model_pb2
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class ModelPrivateServiceStub:
    """Model service responds to internal access
    ========== Private API ==========
    """

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ListModelsAdmin: grpc.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.ListModelsAdminRequest,
        model.model.v1alpha.model_pb2.ListModelsAdminResponse,
    ]
    """ListModelsAdmin method receives a ListModelsAdminRequest message and
    returns a ListModelsAdminResponse
    """
    LookUpModelAdmin: grpc.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.LookUpModelAdminRequest,
        model.model.v1alpha.model_pb2.LookUpModelAdminResponse,
    ]
    """LookUpModelAdmin method receives a LookUpModelAdminRequest message and
    returns a LookUpModelAdminResponse
    """
    CheckModelAdmin: grpc.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.CheckModelAdminRequest,
        model.model.v1alpha.model_pb2.CheckModelAdminResponse,
    ]
    """CheckModelAdmin method receives a CheckModelAdminRequest message and returns a
    CheckModelAdminResponse
    """
    DeployModelAdmin: grpc.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.DeployModelAdminRequest,
        model.model.v1alpha.model_pb2.DeployModelAdminResponse,
    ]
    """DeployModelAdmin deploy a model to online state"""
    UndeployModelAdmin: grpc.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.UndeployModelAdminRequest,
        model.model.v1alpha.model_pb2.UndeployModelAdminResponse,
    ]
    """UndeployModelAdmin undeploy a model to offline state"""

class ModelPrivateServiceAsyncStub:
    """Model service responds to internal access
    ========== Private API ==========
    """

    ListModelsAdmin: grpc.aio.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.ListModelsAdminRequest,
        model.model.v1alpha.model_pb2.ListModelsAdminResponse,
    ]
    """ListModelsAdmin method receives a ListModelsAdminRequest message and
    returns a ListModelsAdminResponse
    """
    LookUpModelAdmin: grpc.aio.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.LookUpModelAdminRequest,
        model.model.v1alpha.model_pb2.LookUpModelAdminResponse,
    ]
    """LookUpModelAdmin method receives a LookUpModelAdminRequest message and
    returns a LookUpModelAdminResponse
    """
    CheckModelAdmin: grpc.aio.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.CheckModelAdminRequest,
        model.model.v1alpha.model_pb2.CheckModelAdminResponse,
    ]
    """CheckModelAdmin method receives a CheckModelAdminRequest message and returns a
    CheckModelAdminResponse
    """
    DeployModelAdmin: grpc.aio.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.DeployModelAdminRequest,
        model.model.v1alpha.model_pb2.DeployModelAdminResponse,
    ]
    """DeployModelAdmin deploy a model to online state"""
    UndeployModelAdmin: grpc.aio.UnaryUnaryMultiCallable[
        model.model.v1alpha.model_pb2.UndeployModelAdminRequest,
        model.model.v1alpha.model_pb2.UndeployModelAdminResponse,
    ]
    """UndeployModelAdmin undeploy a model to offline state"""

class ModelPrivateServiceServicer(metaclass=abc.ABCMeta):
    """Model service responds to internal access
    ========== Private API ==========
    """

    @abc.abstractmethod
    def ListModelsAdmin(
        self,
        request: model.model.v1alpha.model_pb2.ListModelsAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.model.v1alpha.model_pb2.ListModelsAdminResponse, collections.abc.Awaitable[model.model.v1alpha.model_pb2.ListModelsAdminResponse]]:
        """ListModelsAdmin method receives a ListModelsAdminRequest message and
        returns a ListModelsAdminResponse
        """
    @abc.abstractmethod
    def LookUpModelAdmin(
        self,
        request: model.model.v1alpha.model_pb2.LookUpModelAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.model.v1alpha.model_pb2.LookUpModelAdminResponse, collections.abc.Awaitable[model.model.v1alpha.model_pb2.LookUpModelAdminResponse]]:
        """LookUpModelAdmin method receives a LookUpModelAdminRequest message and
        returns a LookUpModelAdminResponse
        """
    @abc.abstractmethod
    def CheckModelAdmin(
        self,
        request: model.model.v1alpha.model_pb2.CheckModelAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.model.v1alpha.model_pb2.CheckModelAdminResponse, collections.abc.Awaitable[model.model.v1alpha.model_pb2.CheckModelAdminResponse]]:
        """CheckModelAdmin method receives a CheckModelAdminRequest message and returns a
        CheckModelAdminResponse
        """
    @abc.abstractmethod
    def DeployModelAdmin(
        self,
        request: model.model.v1alpha.model_pb2.DeployModelAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.model.v1alpha.model_pb2.DeployModelAdminResponse, collections.abc.Awaitable[model.model.v1alpha.model_pb2.DeployModelAdminResponse]]:
        """DeployModelAdmin deploy a model to online state"""
    @abc.abstractmethod
    def UndeployModelAdmin(
        self,
        request: model.model.v1alpha.model_pb2.UndeployModelAdminRequest,
        context: _ServicerContext,
    ) -> typing.Union[model.model.v1alpha.model_pb2.UndeployModelAdminResponse, collections.abc.Awaitable[model.model.v1alpha.model_pb2.UndeployModelAdminResponse]]:
        """UndeployModelAdmin undeploy a model to offline state"""

def add_ModelPrivateServiceServicer_to_server(servicer: ModelPrivateServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
