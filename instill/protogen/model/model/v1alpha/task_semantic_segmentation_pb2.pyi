"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SemanticSegmentationStuff(google.protobuf.message.Message):
    """SemanticSegmentationStuff corresponding to a semantic segmentation stuff"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RLE_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    rle: builtins.str
    """RLE segmentation mask"""
    category: builtins.str
    """Stuff category"""
    def __init__(
        self,
        *,
        rle: builtins.str = ...,
        category: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["category", b"category", "rle", b"rle"]) -> None: ...

global___SemanticSegmentationStuff = SemanticSegmentationStuff

@typing_extensions.final
class SemanticSegmentationInput(google.protobuf.message.Message):
    """SemanticSegmentationInput represents the input of semantic segmentation task"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_URL_FIELD_NUMBER: builtins.int
    IMAGE_BASE64_FIELD_NUMBER: builtins.int
    image_url: builtins.str
    """Image type URL"""
    image_base64: builtins.str
    """Image type base64"""
    def __init__(
        self,
        *,
        image_url: builtins.str = ...,
        image_base64: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image_base64", b"image_base64", "image_url", b"image_url", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_base64", b"image_base64", "image_url", b"image_url", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["image_url", "image_base64"] | None: ...

global___SemanticSegmentationInput = SemanticSegmentationInput

@typing_extensions.final
class SemanticSegmentationInputStream(google.protobuf.message.Message):
    """SemanticSegmentationInputStream represents the input of semantic segmentation
    task when using stream method
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILE_LENGTHS_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    @property
    def file_lengths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """The list of file length for each uploaded binary file"""
    content: builtins.bytes
    """Content of images in bytes"""
    def __init__(
        self,
        *,
        file_lengths: collections.abc.Iterable[builtins.int] | None = ...,
        content: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["content", b"content", "file_lengths", b"file_lengths"]) -> None: ...

global___SemanticSegmentationInputStream = SemanticSegmentationInputStream

@typing_extensions.final
class SemanticSegmentationOutput(google.protobuf.message.Message):
    """SemanticSegmentationOutput represents the output of semantic segmentation
    task
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STUFFS_FIELD_NUMBER: builtins.int
    @property
    def stuffs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SemanticSegmentationStuff]:
        """A list of semantic segmentation stuffs"""
    def __init__(
        self,
        *,
        stuffs: collections.abc.Iterable[global___SemanticSegmentationStuff] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["stuffs", b"stuffs"]) -> None: ...

global___SemanticSegmentationOutput = SemanticSegmentationOutput
