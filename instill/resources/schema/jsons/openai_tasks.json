{"$defs": {"chat_message": {"properties": {"content": {"instillFormat": "structured/multi_modal_content", "items": {"properties": {"image_url": {"properties": {"url": {"description": "Either a URL of the image or the base64 encoded image data.", "type": "string"}}, "required": ["url"], "type": "object"}, "text": {"description": "The text content.", "instillFormat": "string", "type": "string"}, "type": {"description": "The type of the content part.", "enum": ["text", "image_url"], "instillFormat": "string", "type": "string"}}, "required": ["type"], "type": "object"}, "type": "array"}, "role": {"description": "The message role, i.e. 'system', 'user' or 'assistant'", "instillFormat": "string", "instillUIOrder": 0, "title": "Role", "type": "string"}}, "required": ["role", "content"], "title": "Chat Message", "type": "object"}}, "TASK_SPEECH_RECOGNITION": {"instillShortDescription": "Turn audio into text.", "input": {"instillUIOrder": 0, "properties": {"audio": {"description": "The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n", "format": "binary", "type": "string", "x-oaiTypeLabel": "file"}, "language": {"description": "The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n", "type": "string"}, "model": {"description": "ID of the model to use. Only `whisper-1` is currently available.\n", "enum": ["whisper-1"], "example": "whisper-1", "type": "string", "x-oaiTypeLabel": "string"}, "prompt": {"description": "An optional text to guide the model's style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n", "type": "string"}, "temperature": {"default": 0, "description": "The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n", "type": "number"}}, "required": ["audio", "model"], "title": "Input", "type": "object"}, "output": {"instillUIOrder": 0, "properties": {"text": {"type": "string"}}, "required": ["text"], "title": "Output", "type": "object"}}, "TASK_TEXT_EMBEDDINGS": {"instillShortDescription": "Turn text into numbers, unlocking use cases like search.", "input": {"instillUIOrder": 0, "properties": {"model": {"description": "ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.\n", "enum": ["text-embedding-ada-002"], "example": "text-embedding-ada-002", "type": "string", "x-oaiTypeLabel": "string"}, "text": {"description": "The text", "instillAcceptFormats": ["string"], "instillUIMultiline": true, "instillUIOrder": 1, "instillUpstreamTypes": ["value", "reference", "template"], "title": "Text", "type": "string"}}, "required": ["text", "model"], "title": "Input", "type": "object"}, "output": {"instillUIOrder": 0, "properties": {"embedding": {"items": {"instillFormat": "number", "title": "Embedding", "type": "number"}, "title": "Embedding", "type": "array"}}, "required": ["embedding"], "title": "Output", "type": "object"}}, "TASK_TEXT_GENERATION": {"instillShortDescription": "Provide text outputs in response to their inputs.", "description": "OpenAI's text generation models (often called generative pre-trained transformers or large language models) have been trained to understand natural language, code, and images. The models provide text outputs in response to their inputs. The inputs to these models are also referred to as \"prompts\". Designing a prompt is essentially how you \u201cprogram\u201d a large language model model, usually by providing instructions or some examples of how to successfully complete a task.", "input": {"instillUIOrder": 0, "properties": {"chat_history": {"description": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.", "instillAcceptFormats": ["structured/chat_messages"], "instillShortDescription": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.", "instillUIOrder": 4, "instillUpstreamTypes": ["value", "reference"], "items": {"properties": {"content": {"instillFormat": "structured/multi_modal_content", "items": {"properties": {"image_url": {"properties": {"url": {"description": "Either a URL of the image or the base64 encoded image data.", "type": "string"}}, "required": ["url"], "type": "object"}, "text": {"description": "The text content.", "instillFormat": "string", "type": "string"}, "type": {"description": "The type of the content part.", "enum": ["text", "image_url"], "instillFormat": "string", "type": "string"}}, "required": ["type"], "type": "object"}, "type": "array"}, "role": {"description": "The message role, i.e. 'system', 'user' or 'assistant'", "instillFormat": "string", "instillUIOrder": 0, "title": "Role", "type": "string"}}, "required": ["role", "content"], "title": "Chat Message", "type": "object"}, "title": "Chat history", "type": "array"}, "frequency_penalty": {"default": 0, "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)\n", "maximum": 2, "minimum": -2, "nullable": true, "type": "number"}, "images": {"description": "The images", "instillAcceptFormats": ["array:image/*"], "instillUIOrder": 3, "instillUpstreamTypes": ["reference"], "items": {"type": "string"}, "title": "Image", "type": "array"}, "max_tokens": {"description": "The maximum number of [tokens](/tokenizer) to generate in the chat completion.\n\nThe total length of input tokens and generated tokens is limited by the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.\n", "nullable": true, "type": "integer"}, "model": {"description": "ID of the model to use. See the [model endpoint compatibility](/docs/models/model-endpoint-compatibility) table for details on which models work with the Chat API.", "enum": ["gpt-4-1106-preview", "gpt-4-vision-preview", "gpt-4", "gpt-4-0314", "gpt-4-0613", "gpt-4-32k", "gpt-4-32k-0314", "gpt-4-32k-0613", "gpt-3.5-turbo", "gpt-3.5-turbo-16k", "gpt-3.5-turbo-0301", "gpt-3.5-turbo-0613", "gpt-3.5-turbo-16k-0613"], "example": "gpt-3.5-turbo", "type": "string", "x-oaiTypeLabel": "string"}, "n": {"default": 1, "description": "How many chat completion choices to generate for each input message.", "example": 1, "maximum": 128, "minimum": 1, "nullable": true, "type": "integer"}, "presence_penalty": {"default": 0, "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n\n[See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)\n", "maximum": 2, "minimum": -2, "nullable": true, "type": "number"}, "prompt": {"description": "The prompt text", "instillAcceptFormats": ["string"], "instillUIMultiline": true, "instillUIOrder": 1, "instillUpstreamTypes": ["value", "reference", "template"], "title": "Prompt", "type": "string"}, "response_format": {"description": "An object specifying the format that the model must output. Used to enable JSON mode.", "instillUIOrder": 8, "properties": {"type": {"default": "text", "description": "Setting to `json_object` enables JSON mode. This guarantees that the message the model generates is valid JSON. \n\nNote that your system prompt must still instruct the model to produce JSON, and to help ensure you don't forget, the API will throw an error if the string `JSON` does not appear in your system message. Also note that the message content may be partial (i.e. cut off) if `finish_reason=\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length. \n\nMust be one of `text` or `json_object`.\n", "enum": ["text", "json_object"], "example": "text", "type": "string"}}, "required": ["type"], "title": "Response Format", "type": "object"}, "system_message": {"default": "You are a helpful assistant.", "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the model\u2019s behavior is using a generic message as \"You are a helpful assistant.\"", "instillAcceptFormats": ["string"], "instillShortDescription": "The system message helps set the behavior of the assistant", "instillUIMultiline": true, "instillUIOrder": 2, "instillUpstreamTypes": ["value", "reference", "template"], "title": "System message", "type": "string"}, "temperature": {"default": 1, "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.\n", "example": 1, "maximum": 2, "minimum": 0, "nullable": true, "type": "number"}, "top_p": {"default": 1, "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.\n", "example": 1, "maximum": 1, "minimum": 0, "nullable": true, "type": "number"}}, "required": ["model", "prompt"], "title": "Input", "type": "object"}, "output": {"instillUIOrder": 0, "properties": {"texts": {"instillUIOrder": 0, "items": {"instillFormat": "string", "instillMultiline": true, "instillUIMultiline": true, "type": "string"}, "title": "Texts", "type": "array"}}, "required": ["texts"], "title": "Output", "type": "object"}}, "TASK_TEXT_TO_IMAGE": {"instillShortDescription": "Generate or manipulate images with DALL\u00b7E.", "input": {"instillUIOrder": 0, "properties": {"model": {"default": "dall-e-2", "description": "The model to use for image generation.", "enum": ["dall-e-2", "dall-e-3"], "example": "dall-e-3", "nullable": true, "type": "string", "x-oaiTypeLabel": "string"}, "n": {"default": 1, "description": "The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.", "example": 1, "maximum": 10, "minimum": 1, "nullable": true, "type": "integer"}, "prompt": {"description": "A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.", "example": "A cute baby sea otter", "type": "string"}, "quality": {"default": "standard", "description": "The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.", "enum": ["standard", "hd"], "example": "standard", "type": "string"}, "size": {"default": "1024x1024", "description": "The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.", "enum": ["256x256", "512x512", "1024x1024", "1792x1024", "1024x1792"], "example": "1024x1024", "nullable": true, "type": "string"}, "style": {"default": "vivid", "description": "The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.", "enum": ["vivid", "natural"], "example": "vivid", "nullable": true, "type": "string"}}, "required": ["prompt", "model"], "title": "Input", "type": "object"}, "output": {"instillUIOrder": 0, "properties": {"results": {"description": "Generated results", "instillUIOrder": 0, "items": {"description": "Generated result", "properties": {"image": {"description": "Generated image", "instillFormat": "image/webp", "type": "string"}, "revised_prompt": {"description": "Revised prompt", "instillFormat": "string", "instillUIMultiline": true, "type": "string"}}, "required": ["image", "revised_prompt"], "type": "object"}, "title": "Images", "type": "array"}}, "required": ["results"], "title": "Output", "type": "object"}}, "TASK_TEXT_TO_SPEECH": {"instillShortDescription": "Turn text into lifelike spoken audio", "input": {"instillUIOrder": 0, "properties": {"model": {"anyOf": [{"type": "string"}, {"enum": ["tts-1", "tts-1-hd"], "type": "string"}], "description": "One of the available [TTS models](/docs/models/tts): `tts-1` or `tts-1-hd`\n", "x-oaiTypeLabel": "string"}, "response_format": {"default": "mp3", "description": "The format to audio in. Supported formats are `mp3`, `opus`, `aac`, and `flac`.", "enum": ["mp3", "opus", "aac", "flac"], "type": "string"}, "speed": {"default": 1, "description": "The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.", "maximum": 4, "minimum": 0.25, "type": "number"}, "text": {"description": "The text to generate audio for. The maximum length is 4096 characters.", "maxLength": 4096, "type": "string"}, "voice": {"description": "The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`.", "enum": ["alloy", "echo", "fable", "onyx", "nova", "shimmer"], "type": "string"}}, "required": ["text", "model", "voice"], "title": "Input", "type": "object"}, "output": {"instillUIOrder": 0, "properties": {"audio": {"description": "AI generated audio", "instillFormat": "audio/wav", "instillUIOrder": 0, "title": "Audio", "type": "string"}}, "required": [], "title": "Output", "type": "object"}}}