{
  "$defs": {
    "chat_message": {
      "properties": {
        "content": {
          "$ref": "https://raw.githubusercontent.com/instill-ai/component/5e43199713238124565c596433927ef7cb92c565/schema.json#/$defs/instill_types/multi_modal_content",
          "description": "The message content",
          "instillUIOrder": 1,
          "title": "Content"
        },
        "role": {
          "description": "The message role, i.e. 'system', 'user' or 'assistant'",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "Chat Message",
      "type": "object"
    }
  },
  "TASK_SPEECH_RECOGNITION": {
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "audio": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionRequest/properties/file",
          "instillAcceptFormats": [
            "audio/*"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference"
          ],
          "title": "Audio"
        },
        "language": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionRequest/properties/language",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The language of the input audio.",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Language"
        },
        "model": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionRequest/properties/model",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "ID of the model to use",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model"
        },
        "prompt": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionRequest/properties/prompt",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "An optional text to guide the model's style or continue a previous audio segment.",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt"
        },
        "temperature": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionRequest/properties/temperature",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillShortDescription": "The sampling temperature, between 0 and 1.",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature"
        }
      },
      "required": [
        "audio",
        "model"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "$ref": "openai.json#/components/schemas/CreateTranscriptionResponse/properties/text",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Text"
        }
      },
      "required": [
        "text"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_EMBEDDINGS": {
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "model": {
          "$ref": "openai.json#/components/schemas/CreateEmbeddingRequest/properties/model",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "ID of the model to use",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model"
        },
        "text": {
          "description": "The text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text",
        "model"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "embedding": {
          "$ref": "https://raw.githubusercontent.com/instill-ai/component/0bcb5ecde3302537078ece28f218eb2f8d95ef0a/shared_schema.json#/$defs/instill_types/embedding",
          "instillUIOrder": 0,
          "title": "Embedding"
        }
      },
      "required": [
        "embedding"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_GENERATION": {
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "chat_history": {
          "description": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.",
          "instillAcceptFormats": [
            "structured/chat_messages"
          ],
          "instillShortDescription": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "items": {
            "$ref": "#/$defs/chat_message"
          },
          "title": "Chat history",
          "type": "array"
        },
        "frequency_penalty": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/frequency_penalty",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillShortDescription": "Number between -2.0 and 2.0",
          "instillUIOrder": 11,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Frequency Penalty"
        },
        "images": {
          "description": "The images",
          "instillAcceptFormats": [
            "array:image/*"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Image",
          "type": "array"
        },
        "max_tokens": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/max_tokens",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "The maximum number of <a href=\"https://platform.openai.com/tokenizer\">tokens</a> to generate in the chat completion.",
          "instillUIOrder": 7,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Max Tokens"
        },
        "model": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/model",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "ID of the model to use",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model"
        },
        "n": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/n",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "N"
        },
        "presence_penalty": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/presence_penalty",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillShortDescription": "Number between -2.0 and 2.0",
          "instillUIOrder": 10,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Presence Penalty"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "response_format": {
          "description": "An object specifying the format that the model must output. Used to enable JSON mode.",
          "instillUIOrder": 8,
          "properties": {
            "type": {
              "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/response_format/properties/type",
              "instillAcceptFormats": [
                "string"
              ],
              "instillShortDescription": "Setting to `json_object` enables JSON mode. ",
              "instillUIOrder": 0,
              "instillUpstreamTypes": [
                "value",
                "reference"
              ]
            }
          },
          "required": [
            "type"
          ],
          "title": "Response Format",
          "type": "object"
        },
        "system_message": {
          "default": "You are a helpful assistant.",
          "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the model\u2019s behavior is using a generic message as \"You are a helpful assistant.\"",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The system message helps set the behavior of the assistant",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "System message",
          "type": "string"
        },
        "temperature": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/temperature",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillShortDescription": "What sampling temperature to use, between 0 and 2.",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature"
        },
        "top_p": {
          "$ref": "openai.json#/components/schemas/CreateChatCompletionRequest/properties/top_p",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillShortDescription": "An alternative to sampling with temperature, called nucleus sampling",
          "instillUIOrder": 9,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top P"
        }
      },
      "required": [
        "model",
        "prompt"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "texts": {
          "instillUIOrder": 0,
          "items": {
            "instillFormat": "string",
            "instillMultiline": true,
            "instillUIMultiline": true,
            "type": "string"
          },
          "title": "Texts",
          "type": "array"
        }
      },
      "required": [
        "texts"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_TO_IMAGE": {
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "model": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/model",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "ID of the model to use",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model"
        },
        "n": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/n",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "N"
        },
        "prompt": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/prompt",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "A text description of the desired image(s).",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt"
        },
        "quality": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/quality",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The quality of the image that will be generated.",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Quality"
        },
        "size": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/size",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The size of the generated images.",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Size"
        },
        "style": {
          "$ref": "openai.json#/components/schemas/CreateImageRequest/properties/style",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The style of the generated images.",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "N"
        }
      },
      "required": [
        "prompt",
        "model"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "results": {
          "description": "Generated results",
          "instillUIOrder": 0,
          "items": {
            "description": "Generated result",
            "properties": {
              "image": {
                "description": "Generated image",
                "instillFormat": "image/webp",
                "type": "string"
              },
              "revised_prompt": {
                "description": "Revised prompt",
                "instillFormat": "string",
                "instillUIMultiline": true,
                "type": "string"
              }
            },
            "required": [
              "image",
              "revised_prompt"
            ],
            "type": "object"
          },
          "title": "Images",
          "type": "array"
        }
      },
      "required": [
        "results"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_TO_SPEECH": {
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "model": {
          "$ref": "openai.json#/components/schemas/CreateSpeechRequest/properties/model",
          "default": "tts-1",
          "enum": [
            "tts-1",
            "tts-1-hd"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "ID of the model to use",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model",
          "type": "string"
        },
        "response_format": {
          "$ref": "openai.json#/components/schemas/CreateSpeechRequest/properties/response_format",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The format to audio",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Response Format"
        },
        "speed": {
          "$ref": "openai.json#/components/schemas/CreateSpeechRequest/properties/speed",
          "instillAcceptFormats": [
            "number"
          ],
          "instillShortDescription": "The speed of the generated audio",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Speed"
        },
        "text": {
          "$ref": "openai.json#/components/schemas/CreateSpeechRequest/properties/input",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The text to generate audio for",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Text"
        },
        "voice": {
          "$ref": "openai.json#/components/schemas/CreateSpeechRequest/properties/voice",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The voice to use when generating the audio",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Voice"
        }
      },
      "required": [
        "text",
        "model",
        "voice"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "audio": {
          "description": "AI generated audio",
          "instillFormat": "audio/wav",
          "instillUIOrder": 0,
          "title": "Audio",
          "type": "string"
        }
      },
      "required": [],
      "title": "Output",
      "type": "object"
    }
  }
}
